{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducer/authReducer.js","store/reducer/projectReducer.js","store/reducer/rootReducer.js","config/fbconfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","Notification","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","format","ProjectList","projects","Dashboard","this","Notifications","Component","compose","firestore","ordered","firestoreConnect","collection","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","action","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.e582be7e.chunk.js","sourcesContent":["import React, { Profiler } from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {signOut} from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks =(props) =>{ \r\n    \r\n    return (\r\n        <ul className='right'>\r\n            <li><NavLink to='/createproject'>New Project</NavLink></li>\r\n            <li><a onClick= {props.signOut}>Log Out</a></li>\r\n            <li><NavLink to='/' className='btn btn-floating blue lighten-1'>\r\n                {props.profile.initials}\r\n                </NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn =( credentials) =>{\r\n    return (dispatch, getState, {getFirebase})=>{\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(()=>{\r\n            dispatch ({type : 'LOGIN_SUCCESS'})\r\n        }).catch((err)=>{\r\n            dispatch({type: 'LOGIN_ERROR', err})\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut =( ) =>{\r\n    return (dispatch, getState, {getFirebase})=>{\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(()=>{\r\n            dispatch({type: 'SIGNOUT_SUCCESS'});\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser)=>{\r\n    return (dispatch, getState, {getFirebase, getFirestore})=>{\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email, \r\n            newUser.password\r\n          ).then(resp => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n              firstName: newUser.firstName,\r\n              lastName: newUser.lastName,\r\n              initials: newUser.firstName[0] + newUser.lastName[0]\r\n            });\r\n          }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS' });\r\n          }).catch((err) => {\r\n            dispatch({ type: 'SIGNUP_ERROR', err});\r\n          });\r\n    }\r\n}","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst SignedOutLinks =() =>{\r\n    return (\r\n        <ul className='right'>\r\n            <li><NavLink to='/signup'>Sign up</NavLink></li>\r\n            <li><NavLink to='/signin'>Log In</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks;","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport {connect} from 'react-redux'\r\n\r\nconst Navbar =(props) =>{\r\n    const {auth, profile} = props;\r\n    const links = auth.uid ? <SignedInLinks profile= {profile}/> : <SignedOutLinks/>\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className='brand-logo'>ProjectPlanner</Link>\r\n                {links}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps =(state)=>{\r\n    console.log(state)\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notification =(props)=>{\r\n    const {notifications} = props;\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\" >\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">\r\n                        Notifications\r\n                    </span>\r\n                    <ul className=\"notifications\">\r\n                        { notifications && notifications.map(item =>{\r\n                            return (\r\n                                <li key={item.id}>\r\n                                    <span className=\"red-text\">{item.user} </span>\r\n                                    <span>{item.content}</span>\r\n                                    <div className=\"grey-text note-date\">\r\n                                    {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Notification;","import React from 'react'\r\nimport moment from 'moment'\r\n\r\n\r\nconst ProjectSummary = ({project}) =>{\r\n    return (\r\n        \r\n            <div className=\"card z-depth-0 project-summary\">\r\n                <div className=\"card-content grey-text text-darken-3\">\r\n                    <span className=\"card-title\">{project.title}</span>\r\n                    <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n                    <p className='grey-text'>Created on {project.createdAt && moment(project.createdAt.toDate()).format('llll')}</p>\r\n                </div>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default ProjectSummary;\r\n","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport {Link } from 'react-router-dom'\r\n\r\n\r\nconst ProjectList = ({projects})=>{\r\n    return (\r\n        <div className=\"project-list section\">\r\n            {projects && projects.map(project => { // projects && is used in the beginning of this sentence mainly because we want it to display something even though there is no data that might be currently available\r\n                return (\r\n                    <Link to={'/projects/' + project.id} key={project.id}>\r\n                    <ProjectSummary project={project} />\r\n                    </Link>\r\n                )\r\n            })}\r\n        </div>\r\n        \r\n\r\n    );\r\n}\r\n\r\nexport default ProjectList;","import React, { Component } from 'react'\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport {connect} from 'react-redux'\r\nimport {compose} from 'redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport { Redirect} from 'react-router-dom'\r\n\r\nclass Dashboard extends Component{\r\n    render(){\r\n        const {projects , auth ,notifications}= this.props\r\n\r\n        if (!auth.uid){\r\n            return <Redirect to='/signin' />\r\n        }\r\n        return (\r\n        <div className=\"dashboard container\">\r\n            <div className=\"row\">\r\n                <div className=\"col s12 m6\">\r\n                    <ProjectList projects={projects}/>\r\n                </div>\r\n                <div className=\"col s12 m5 offset-m1\">\r\n                    <Notifications notifications= {notifications}/> \r\n                </div>\r\n            </div>\r\n         </div>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n   // console.log(state);\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection: 'projects'},\r\n        {collection: 'notifications', limit:3}\r\n    ])\r\n)(Dashboard);","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails = (props) => {\r\n    const {project, auth} = props;\r\n    if (!auth.uid){\r\n        return <Redirect to='/signin' />\r\n    }\r\n    if (project){\r\n        return (\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                    <span className=\"card-title\">{project.title}</span>\r\n                        <p>{project.content}</p>\r\n                    </div>\r\n                    <div className=\"card-action grey lighten-4 grey-text\">\r\n                        <p>Posted by {project.authorFirstName} {project.authorLastName} </p>\r\n                    <p>Created on {project.createdAt && moment(project.createdAt.toDate()).format('llll')}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n        \r\n    } else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading Project....</p>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) =>{\r\n    //console.log(state);\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        project : project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect(\r\n        [{\r\n            collection: 'projects'\r\n        }]\r\n    )\r\n)(ProjectDetails)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {signIn} from '../../store/actions/authActions'\r\nimport {Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n    state ={\r\n        email: '',\r\n        password:''\r\n    }\r\n    handleChange = (e)=>{\r\n        this.setState({\r\n            [e.target.id]: e.target.value \r\n        })\r\n    }\r\n    handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        this.props.signIn(this.state)\r\n    }\r\n    render() {\r\n        const {authError, auth} = this.props;\r\n        if (auth.uid){\r\n            return <Redirect to='/' />\r\n        }\r\n        return (\r\n            <div className='container'>\r\n                <form onSubmit={this.handleSubmit} action=\"\" className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id='email' onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id='password' onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className='btn green lighten-1 z-depth-0'>Log in</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p> {authError}</p>: null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Redirect } from 'react-router-dom'\r\nimport {signUp} from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n    state ={\r\n        email: '',\r\n        password:'',\r\n        firstName:'',\r\n        lastName:''\r\n    }\r\n    handleChange = (e)=>{\r\n        this.setState({\r\n            [e.target.id]: e.target.value \r\n        })\r\n    }\r\n    handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        this.props.signUp(this.state)\r\n    }\r\n    render() {\r\n        const { auth , authError} = this.props;\r\n        if (auth.uid){\r\n            return <Redirect to='/' />\r\n        }\r\n        return (\r\n            <div className='container'>\r\n                <form onSubmit={this.handleSubmit} action=\"\" className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id='firstName' onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id='lastName' onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id='email' onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id='password' onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className='btn green lighten-1 z-depth-0'>Sign Up</button>\r\n                    \r\n                    </div>\r\n                    <div className=\"red-text center\">\r\n                        {authError? <p>{authError}</p>: null}\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    //console.log(state)\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return{\r\n        signUp: (newUser) =>dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {createProject } from '../../store/actions/projectActions'\r\nimport {Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n    state ={\r\n        title: '',\r\n        content: ''\r\n    }\r\n    handleChange = (e)=>{\r\n        this.setState({\r\n            [e.target.id]: e.target.value \r\n        })\r\n    }\r\n    handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        //console.log(this.state);\r\n        this.props.createProject(this.state);\r\n        this.props.history.push('/')\r\n    }\r\n    render() {\r\n        const {auth} = this.props;\r\n        if (!auth.uid){\r\n            return <Redirect to='/signin' />\r\n        }\r\n        return (\r\n            <div className='container'>\r\n                <form onSubmit={this.handleSubmit} action=\"\" className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Create Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id='title' onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor='content'>Project Content</label>\r\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange} ></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className='btn green lighten-1 z-depth-0'>Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=> {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\r\n","export const createProject =(project)=>{\r\n    return (dispatch , getState, {getFirebase, getFirestore})=>{\r\n        //make async call to database\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName:profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(()=>{\r\n            dispatch({type: 'CREATE_PROJECT', project: project });\r\n        }).catch((err)=>{\r\n            dispatch({type: 'CREATE_PROJECT_ERROR', err});\r\n        })\r\n    }\r\n}; ","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Navbar/>\n      <Switch>\n        <Route exact path=\"/\" component={Dashboard}/>\n        <Route path='/projects/:id' component={ProjectDetails} />\n        <Route path='/signin' component={SignIn}/>\n        <Route path='/signup' component={SignUp}/>\n        <Route path='/createproject' component={CreateProject}/>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState ={\r\n     authError: null\r\n}\r\n\r\nconst authReducer = (state =initState,action) =>{\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error')\r\n            return {\r\n                ...state, \r\n                authError : 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login successful')\r\n            return {\r\n                ...state, \r\n                authError : null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success')\r\n            return state;\r\n\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup successful')\r\n            return {\r\n                ...state, \r\n                authError : null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup failed')\r\n            return {\r\n                ...state, \r\n                authError : action.err.message\r\n            }\r\n            default: \r\n            return state;   \r\n    }\r\n}\r\n\r\nexport default authReducer;","const initState ={\r\n    projects: [\r\n        {id:'1', title:'Destroy sable outpost', content:'blah blah blah'},\r\n        {id:'2', title:'Beat Mr.Negative', content:'blah blah blah'},\r\n        {id:'3', title:'Buy a new suit', content:'blah blah blah'}\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state =initState,action) =>{\r\n    switch(action.type){\r\n        case 'CREATE_PROJECT':\r\n            console.log ('created project', action.project);\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error', action.err);\r\n            return state;\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer;","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport {combineReducers } from 'redux'\r\nimport {firestoreReducer} from 'redux-firestore'\r\nimport {firebaseReducer} from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n})\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyAi2YvPJqJGRx5gHSpA-piNMA-Gz9ON2N4\",\r\n    authDomain: \"marioplan-cd174.firebaseapp.com\",\r\n    databaseURL: \"https://marioplan-cd174.firebaseio.com\",\r\n    projectId: \"marioplan-cd174\",\r\n    storageBucket: \"marioplan-cd174.appspot.com\",\r\n    messagingSenderId: \"509048856700\",\r\n    appId: \"1:509048856700:web:be3d9b099cfadb8b26a9f9\",\r\n    measurementId: \"G-79DV3663Q0\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  \r\n  firebase.firestore().settings({timestampsInSnapshots : true});\r\n\r\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport rootReducer from './store/reducer/rootReducer'\nimport {Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport {reduxFirestore, getFirestore} from 'redux-firestore'\nimport {reactReduxFirebase ,getFirebase} from 'react-redux-firebase'\nimport fbConfig from './config/fbconfig'\n\nconst store= createStore(rootReducer, \n  compose(\n  applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile:'users' , attachAuthIsReady: true}),\n  )\n);\n\nstore.firebaseAuthIsReady.then(()=>{\n  ReactDOM.render( <Provider store ={store}>\n    <App />\n  </Provider>,\n    // <React.StrictMode>\n      \n    // </React.StrictMode>,\n    document.getElementById('root')\n  );\n  \n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: https://bit.ly/CRA-PWA\n  serviceWorker.unregister();\n})\n\n\n"],"sourceRoot":""}